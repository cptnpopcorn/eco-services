services:
  certbot_init_msg:
    image: alpine
    command: sh -c :" > /msg/in"
    volumes:
       - certbot_msg:/msg

  certbot_init_nginx:
    image: nginx
    depends_on:
      certbot_init_msg:
        condition: service_completed_successfully
    entrypoint: sh
    command: -c 'nginx && tail -f /msg/in | head -n 1 && nginx -s stop'
    ports:
      - 80:80
    volumes:
      - ./nginx/conf/main.certbot.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf/http-location-certbot.conf:/etc/nginx/http-location/certbot.conf:ro
      - certbot_www:/var/www/certbot:ro
      - certbot_msg:/msg

  certbot_init:
    image: certbot/certbot
    depends_on:
      certbot_init_nginx:
        condition: service_started
    environment:
      - DOMAIN=${DOMAIN}
      - DOMAINPREFIXES
    entrypoint: sh
    command: /usr/lib/local/create-cert.sh
    volumes:
      - ./certbot/create-cert.sh:/usr/lib/local/create-cert.sh
      - ./certbot/conf/cli.ini:/etc/certbot/cli.ini:ro
      - certbot_www:/var/www/certbot
      - certbot_msg:/msg
      - letsencrypt_cert:/etc/letsencrypt

  nginx:
    image: nginx
    depends_on:
      certbot_init_nginx:
        condition: service_completed_successfully
    environment:
      - DOMAIN=${DOMAIN}
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/entrypoint/autoreload.sh:/docker-entrypoint.d/99-autoreload.sh:ro
      - ./nginx/templates/main.conf.template:/etc/nginx/templates/main.conf.template:ro
      - ./nginx/conf/http-location-certbot.conf:/etc/nginx/http-location/certbot.conf:ro
      - certbot_www:/var/www/certbot:ro
      - letsencrypt_cert:/etc/letsencrypt:ro

  certbot_renew:
    image: certbot/certbot
    depends_on:
      nginx:
        condition: service_started
    environment:
      - DOMAIN=${DOMAIN}
    entrypoint: sh -c "trap exit TERM; while ":"; do sleep 12h & wait $${!}; certbot renew; done;"
    volumes:
      - ./certbot/conf/cli.ini:/etc/certbot/cli.ini:ro
      - certbot_www:/var/www/certbot
      - letsencrypt_cert:/etc/letsencrypt

volumes:
  certbot_msg:
  certbot_www:
  letsencrypt_cert:
